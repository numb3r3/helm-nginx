worker_processes  1;

error_log         "/opt/bitnami/nginx/logs/error.log";
pid               "/opt/bitnami/nginx/tmp/nginx.pid";

events {
  multi_accept        on;
  worker_connections  4096;  ## Default: 1024
  use                 epoll;
}

http {
  lua_package_path "/opt/bitnami/nginx/conf/lua/?.lua;/opt/bitnami/nginx/lib/lua/?.lua;;";
  lua_shared_dict balancer_ewma 10M;
  lua_shared_dict balancer_ewma_last_touched_at 10M;
  lua_shared_dict balancer_ewma_locks 1M;
  lua_shared_dict certificate_data 20M;
  lua_shared_dict certificate_servers 5M;
  lua_shared_dict configuration_data 20M;
  lua_shared_dict global_throttle_cache 10M;
  lua_shared_dict ocsp_response_cache 5M;

  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  log_format grpc_json escape=json '{"timestamp":"$time_iso8601",'
           '"client":"$remote_addr","uri":"$uri","http-status":$status,'
           '"grpc-status":$grpc_status,"upstream":"$upstream_addr"'
           '"rx-bytes":$request_length,"tx-bytes":$bytes_sent}';

  map $upstream_trailer_grpc_status $grpc_status {
    default $upstream_trailer_grpc_status; # grpc-status is usually a trailer
    ''      $sent_http_grpc_status; # Else use the header, whatever its source
  }

  # HTTP Server
  server {
    server_name _ ;
    # Port to listen on, can also be set in IP:PORT format
    listen  8080;

    location /status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
    }
  }

  server {
    # https://www.nginx.com/blog/deploying-nginx-plus-as-an-api-gateway-part-3-publishing-grpc-services/
    listen 2096 ssl http2;
    listen [::]:2096 ssl http2;

    server_name demo-cas.dev.jina.ai demo-cas-stage.jina.ai demo-cas.jina.ai;
    # access_log   /var/log/nginx/grpc_log.json grpc_json;

    # TLS configuration
    ssl_certificate     ssl/cas/cert.pem;
    ssl_certificate_key ssl/cas/key.pem;
    ssl_session_timeout  5m;

    server_name_in_redirect off;

    location / {
        grpc_pass grpc://grpcbin.default.svc.cluster.local:9001;
    }

    # Error responses
    include conf.d/errors.grpc_conf; # gRPC-compliant error responses
    default_type application/grpc;   # Ensure gRPC for all error responses
  }
  server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name demo-cas.dev.jina.ai demo-cas-stage.jina.ai demo-cas.jina.ai;

    # access_log  /var/log/nginx/http_access.log  main;

    # TLS configuration
    ssl_certificate     ssl/cas/cert.pem;
    ssl_certificate_key ssl/cas/key.pem;
    ssl_session_timeout  5m;

    server_name_in_redirect off;

    location / {
        proxy_redirect     off;

        proxy_cache_bypass	$http_upgrade;
        proxy_set_header Upgrade	$http_upgrade;
        proxy_set_header Connection	“upgrade”;
        proxy_set_header Host	$host;
        proxy_set_header X-Real-IP	$remote_addr;
        proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto	$scheme;
        proxy_set_header X-Forwarded-Host	$host;
        proxy_set_header X-Forwarded-Port	$server_port;


        proxy_pass http://httpbin.default.svc.cluster.local:80;

    }
  }
}